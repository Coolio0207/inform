Vue JS Interviewprops is an array of string literals or object references used to pass data from parent component.It can also be in object form when it is desired to have more fine grained control like specifying default values, type of data accepted, whether it is required or optional.data has to be a function which returns an object instead of a plain object. It is so because we require each instance of the component to have its own data for re-usability purpose.events is an object containing listeners for events to which the component can respond by behavioral change.methods object containing functions defining the behavior associated with the component.computed properties are just like watchers or observables, whenever any dependency changes the properties are recalculated automatically and changes are reflected in DOM instantly if DOM uses any computed properties.ready is a Vue instance's life-cycle hook.Explain the differences between one-way data flow and two-way data binding?In one-way data flow the view(UI) part of application does not updates automatically when data Model is change we need to write some custom code to make it updated every time a data model is changed.In Vue js v-bind is used for one-way data flow or binding.In two-way data binding the view(UI) part of application automatically updates when data Model is changed.In Vue.js v-model directive is used for two way data binding.How to create Two-Way Bindings in Vue.js?v-model directive is used to create Two-Way Bindings in Vue js.In Two-Way Bindings data or model is bind with DOM and Dom is binded back to model.What are filters in VUE.js?In Vue js filters are used to transform the output that are going to rendered on browser.A Vue.js filter is essentially a function that takes a value, processes it, and then returns the processed value. In the markup it is denoted by a single pipe (|) and can be followed by one or more arguments:<element directive="expression | filterId [args...]"></element>In Vue 2.0, there are no built-in filters are availables, however you are free to create your own filters.What are Directives in VUE.js, List some of them you used?The concept of directive in Vue js is drastically simpler than that in Angular. Vue.js directives provides a way to extend HTML with new attributes and tags. Vue.js has a set of built-in directives which offers extended functionality to your applications.You can also write your custom directives in Vue.js .Below are list of commonly used directives in Vue.jsv-show, v-if, v-model, v-else, v-onWhat is Vuex?VueX is a state management pattern and library for the application using Vue JS. it acts as a centralized store for all the different components in your Vue JS application. It has rules to ensure that the state can be only mutated in a predictable fashion. It can be integrated with the official devtool extension of Vue to provide additional features. Vuex mainly helps in dealing with shared state management with the cost of more concepts and boilerplate.How to create a component in Vue js?Components in Vue JS are a single, independent unit of an interface. They have their own state, markup, and style.A Vue component can be defined in four ways.The first is new Vue({ /*options */ }).The second is Vue.component(‘component-name’, { /* options */ }).The third way is by using the local components.The fourth is in the .vue files or Single File Components.The first two ways are the standard ways to use Vue when building an application that is not a SPA (Single Page Application). The Single File Components are uses in the Single Page Application.What is the difference between v-show and v-if directives?Below are some of the main differences between between v-show and v-if directives,v-if only renders the element to the DOM if the expression passes whereas v-show renders all elements to the DOM and then uses the CSS display property to show/hide elements based on expression.v-if supports v-else and v-else-if directives whereas v-show doesn't support else directives.v-if has higher toggle costs while v-show has higher initial render costs. i.e, v-show has a performance advantage if the elements are switched on and off frequently, while the v-if has the advantage when it comes to initial render time.v-if supports <template> tab but v-show doesn't support.What is the purpose of v-for directive?The built-in v-for directive allows us to loop through items in an array or object. You can iterate on each element in the array or object.How do you achieve conditional group of elements?You can achieve conditional group of elements(toggle multiple elements at a time) by applying v-if directive on <template> element which works as invisible wrapper(no rendering) for group of elements.What is the One-Way Data Flow in Vue.js?One-Way Data Flow - All Props work in one direction means data flow works from parent to child. When any change happens in parent property it automatically updates child property but not vice versa. It prevents a child from mutating the parent property state, which can make your application data flow harder to understand.How do you implement two-way binding?You can use the v-model directive to create two-way data bindings on form input, textarea, and select elements.What are components and give an example?Components are reusable Vue instances with a name. They accept the same options as new Vue, such as data, computed, watch, methods, and lifecycle hooks(except few root-specific options like el).What are props?Props are custom attributes you can register on a component. When a value is passed to a prop attribute, it becomes a property on that component instance. You can pass those list of values as props option and use them as similar to data variables in template.What are slots?Vue implements a content distribution API using the element to serve as distribution outlets for content created after after the current Web Components spec draft.What is vue router and their features?Vue Router is a official routing library for single-page applications designed for use with the Vue.js framework.Below are their features,Nested route/view mappingModular, component-based router configurationRoute params, query, wildcardsView transition effects powered by Vue.js' transition systemFine-grained navigation controlLinks with automatic active CSS classesHTML5 history mode or hash mode, with auto-fallback in IE9Restore scroll position when going back in history modeHow to make router param changes as reactive?When you navigate from one URL to other(mapped with a single component) using routes with params then the same component instance will be reused. Even though it is more efficient than destroying the old instance and then creating a new one, the lifecycle hooks of the component will not be called.How to share the data between components in Vue.js application.Data flow is useful to share the data between components.Parent Component to Child - Data is passed from a parent component to child component using 'Props'. Props are the custom attributes that you can register on a component and when a value is passed to those props attribute then it becomes a property on that component instance.So when Parent component makes any changes it reflects in the child component's prop attribute.Child Component to Parent - Some scenarios may require communicating back to parent component so to solve this case Vue instances provide the concept of events. Parent component can listen to any event on the child component using 'v-on' and Child component can emit any event by calling the $emit method.Share data across Components - Some scenarios may be required to share the data across all the components. Vuex solves this problem by creating a centralized store for data that is shared across all the components.Explain the Vue.js lifecycle hooks.Every Vue instance passes through certain functions called lifecycle hooks. There are 8 lifecycle hooks for each vue.js instance.Before Create - First lifecycle hook that's called immediately after a vue instance has been initialized.Created - It's called just after the 'Before create' hook but the vue instance has set initial properties, data etc.Before mount - It's called just before the instance is mounted on DOM. At this moment the template has been compiled.Mounted - It's called once the template is ready with data and functional.Before update - It's called when any changes are made to data that requires DOM to be updated.Updated - It's called just after DOM has updated.Before destroy -It's a place where you can perform resource clean up before destroying the vue instance.destroyed - It's get called when all vue instances have been destroyed. It will be triggered when run the destroy method on an object in code.What is $root in Vue.js?$root property is used to access the root instance (new Vue()) in every subcomponent of this instance. All subcomponents can access this root instance and can use it as a global storage.Describe the ref in Vue.js.Vue.js provides the concept of props and events to communicate from parent to child and vice versa. Sometimes you need to directly access child components in JavaScript. To achieve this behavior you can use ref attribute to assign a reference ID to the child component as below.

Can we call Rest API from Vue.js? How?
Yes, we can call Rest API from Vue.js. There are several HTTP libraries that can used to call REST Api's from Vue.js. 
One of the popular libraries is Axios. It is very simple to use and lightweight. 
You can include it in your project by using the following command.

What are the supported modifiers on the v-model directive in Vue.js?
Following are the three modifiers supported for the v-model directive in Vue.js:
lazy: By default, the v-model directive syncs the input with the data after each input event. We can add the lazy modifier to instead sync after change events.
number: The number modifier is used to our v-model when we want user input to be automatically typecast as a number. With the type="number", the value of HTML input elements always returns a string. That's why this typecast modifier is required.
trim: We should add the trim modifier to our v-model when we want whitespace from user input to be trimmed automatically.

What do you understand by the array detection non-mutation methods?
The methods that do not mutate the original array but always return a new array are known as non-mutation methods.
Following is a list of the non-mutation methods:
filter() method
concat() method
slice() method
Let's take an example to understand it better. We have a todo list replacing the old array with a new one based on the status filter.